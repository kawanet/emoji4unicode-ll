use strict;
use warnings;
use lib 't';
require 'test-util.pl';
use Test::More;
use Encode::JP::Emoji;
use Encode::JP::Emoji::Property;

plan tests => 40;

my $sjis0     = "\x{6F22}";
my $docomo0   = "\x{E63E}";
my $kddi0     = "\x{E488}";
my $softbank0 = "\x{E04A}";
my $google0   = "\x{FE000}";

my $sjis1     = $sjis0;
my $docomo1   = $docomo0;
my $kddi1     = $kddi0;
my $softbank1 = $softbank0;
my $google1   = $google0;
encode( 'Shift_JIS'             => $sjis1     );
encode( 'x-sjis-emoji-docomo'   => $docomo1   );
encode( 'x-sjis-emoji-kddi'     => $kddi1     );
encode( 'x-sjis-emoji-softbank' => $softbank1 );
encode( 'x-utf8-e4u-docomo'     => $google1   );
ok( utf8::is_utf8($sjis1),     'default encode sjis utf8 flag' );
ok( utf8::is_utf8($docomo1),   'default encode docomo utf8 flag' );
ok( utf8::is_utf8($kddi1),     'default encode kddi utf8 flag' );
ok( utf8::is_utf8($softbank1), 'default encode softbank utf8 flag' );
ok( utf8::is_utf8($google1),   'default encode softbank utf8 flag' );
is( $sjis1,     $sjis0,     'default encode sjis not changed' );
is( $docomo1,   $docomo0,   'default encode docomo not changed' );
is( $kddi1,     $kddi0,     'default encode kddi not changed' );
is( $softbank1, $softbank0, 'default encode softbank not changed' );
is( $google1,   $google0,   'default encode softbank not changed' );

my $sjis2     = $sjis0;
my $docomo2   = $docomo0;
my $kddi2     = $kddi0;
my $softbank2 = $softbank0;
my $google2   = $google0;
encode( 'Shift_JIS'             => $sjis2,     Encode::LEAVE_SRC() );
encode( 'x-sjis-emoji-docomo'   => $docomo2,   Encode::LEAVE_SRC() );
encode( 'x-sjis-emoji-kddi'     => $kddi2,     Encode::LEAVE_SRC() );
encode( 'x-sjis-emoji-softbank' => $softbank2, Encode::LEAVE_SRC() );
encode( 'x-utf8-e4u-kddi'       => $google2,   Encode::LEAVE_SRC() );
ok( utf8::is_utf8($sjis2),     'LEAVE_SRC encode sjis utf8 flag' );
ok( utf8::is_utf8($docomo2),   'LEAVE_SRC encode docomo utf8 flag' );
ok( utf8::is_utf8($kddi2),     'LEAVE_SRC encode kddi utf8 flag' );
ok( utf8::is_utf8($softbank2), 'LEAVE_SRC encode softbank utf8 flag' );
ok( utf8::is_utf8($google2),   'LEAVE_SRC encode softbank utf8 flag' );
is( $sjis2,     $sjis0,     'LEAVE_SRC encode sjis not changed' );
is( $docomo2,   $docomo0,   'LEAVE_SRC encode docomo not changed' );
is( $kddi2,     $kddi0,     'LEAVE_SRC encode kddi not changed' );
is( $softbank2, $softbank0, 'LEAVE_SRC encode softbank not changed' );
is( $google2,   $google0,   'LEAVE_SRC encode softbank not changed' );

my $sjis3     = $sjis0;
my $docomo3   = $docomo0;
my $kddi3     = $kddi0;
my $softbank3 = $softbank0;
my $google3   = $google0;
encode( 'Shift_JIS'             => $sjis3,     Encode::XMLCREF() );
encode( 'x-sjis-emoji-docomo'   => $docomo3,   Encode::XMLCREF() );
encode( 'x-sjis-emoji-kddi'     => $kddi3,     Encode::XMLCREF() );
encode( 'x-sjis-emoji-softbank' => $softbank3, Encode::XMLCREF() );
encode( 'x-utf8-e4u-kddi'       => $google3,   Encode::XMLCREF() );
ok( utf8::is_utf8($sjis3),     'XMLCREF encode sjis utf8 flag' );
ok( utf8::is_utf8($docomo3),   'XMLCREF encode docomo utf8 flag' );
ok( utf8::is_utf8($kddi3),     'XMLCREF encode kddi utf8 flag' );
ok( utf8::is_utf8($softbank3), 'XMLCREF encode softbank utf8 flag' );
ok( utf8::is_utf8($google3),   'XMLCREF encode softbank utf8 flag' );
is( $sjis3,     $sjis0,     'XMLCREF encode sjis not changed' );
is( $docomo3,   $docomo0,   'XMLCREF encode docomo not changed' );
is( $kddi3,     $kddi0,     'XMLCREF encode kddi not changed' );
is( $softbank3, $softbank0, 'XMLCREF encode softbank not changed' );
is( $google3,   $google0,   'XMLCREF encode softbank not changed' );

my $check = sub { shift };

my $sjis4     = $sjis0;
my $docomo4   = $docomo0;
my $kddi4     = $kddi0;
my $softbank4 = $softbank0;
my $google4   = $google0;
encode( 'Shift_JIS'             => $sjis4,     $check );
encode( 'x-sjis-emoji-docomo'   => $docomo4,   $check );
encode( 'x-sjis-emoji-kddi'     => $kddi4,     $check );
encode( 'x-sjis-emoji-softbank' => $softbank4, $check );
encode( 'x-utf8-e4u-softbank'   => $google4,   $check );
ok( utf8::is_utf8($sjis4),     'sub-routine encode sjis utf8 flag' );
ok( utf8::is_utf8($docomo4),   'sub-routine encode docomo utf8 flag' );
ok( utf8::is_utf8($kddi4),     'sub-routine encode kddi utf8 flag' );
ok( utf8::is_utf8($softbank4), 'sub-routine encode softbank utf8 flag' );
ok( utf8::is_utf8($google4),   'sub-routine encode softbank utf8 flag' );
is( $sjis4,     $sjis0,     'sub-routine encode sjis not changed' );
is( $docomo4,   $docomo0,   'sub-routine encode docomo not changed' );
is( $kddi4,     $kddi0,     'sub-routine encode kddi not changed' );
is( $softbank4, $softbank0, 'sub-routine encode softbank not changed' );
is( $google4,   $google0,   'sub-routine encode softbank not changed' );
